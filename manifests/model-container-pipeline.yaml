kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: model-container-build
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem
---
kind: Secret
apiVersion: v1
metadata:
  name: aws-credentials
stringData:
  credentials: |-
    [default]
    aws_access_key_id     = ACCESS_KEY
    aws_secret_access_key = SECRET_KEY
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: aws-cli
spec:
  description: This task performs operations on Amazon Web Services resources using aws.
  params:
    - default: aws $@
      description: The AWS script to run
      name: SCRIPT
      type: string
    - default:
        - help
      description: AWS cli arguments to be passed
      name: ARGS
      type: array
  steps:
    - args:
        - $(params.ARGS)
      image: >-
        docker.io/amazon/aws-cli:2.0.52@sha256:1506cec98a7101c935176d440a14302ea528b8f92fcaf4a6f1ea2d7ecef7edc4
      name: awscli
      resources: {}
      script: $(params.SCRIPT)
  workspaces:
    - name: source
      optional: true
    - mountPath: /tekton/home/.aws
      name: secrets
      optional: true
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-model-container
spec:
  params:
    - default: 's3://models/TIMESTAMP/model.data'
      name: S3_OBJECT_URL
      type: string
    - default: 'http://minio-service.minio.svc.cluster.local:9000'
      name: S3_ENDPOINT_URL
      type: string
    - default: 'https://github.com/rbo/AI-for-edge-microshift-demo.git'
      name: git_repository_url
      type: string
    - default: 'REGISTRY/REPOSITORY/IMAGE:TAG'
      name: target_image_url
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.git_repository_url)
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:55b0686bbd045c9c77820686318f8a5ff2aff06de566b067f408d27a93bf153c
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: model-container-build-space
    - name: download-model
      params:
        - name: SCRIPT
          value: |-
            mkdir ~/.aws
            cp /tekton/home/.aws/credentials ~/.aws
            aws configure list
            aws s3 cp $1 $2 --endpoint-url $3
        - name: ARGS
          value:
            - $(params.S3_OBJECT_URL)
            - /workspace/source/container-images/model-container/model.data
            - $(params.S3_ENDPOINT_URL)
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: aws-cli
      workspaces:
        - name: source
          workspace: model-container-build-space
        - name: secrets
          workspace: s3-parameters
    - name: buildah
      params:
        - name: IMAGE
          value: $(params.target_image_url)
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:23fb7971ea6ac4aaaaa1139473a602df0df19222a3b5a76b551b2b9ddd92e927
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: /workspace/source/container-images/model-container/Containerfile
        - name: CONTEXT
          value: /workspace/source/container-images/model-container
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: '--platform linux/arm64/v8'
      runAfter:
        - download-model
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: model-container-build-space
  workspaces:
    - name: model-container-build-space
    - name: s3-parameters
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: model-container
